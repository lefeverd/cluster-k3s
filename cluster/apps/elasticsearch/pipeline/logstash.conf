input {
    http {
        port => 8080
        # See https://discuss.elastic.co/t/json-codec-plugin-target-option-http-input/304217/3
        # Force the use of the defined "codec" by removing any additional_codecs.
        additional_codecs => {}
        codec => json {
            target => "[document]"
        }
    }
}
filter {
    date {
        match => ["[document][end]", "ISO8601", "yyyy-MM-dd'T'HH:mm:ss.SSS", "yyyy-MM-dd'T'HH:mm:ss.SSSSSS"]
    }
    date {
        match => ["[document][end]", "ISO8601", "yyyy-MM-dd'T'HH:mm:ss.SSS", "yyyy-MM-dd'T'HH:mm:ss.SSSSSS"]
        target => "end_date"
    }
    date {
        match => ["[document][start]", "ISO8601", "yyyy-MM-dd'T'HH:mm:ss.SSS", "yyyy-MM-dd'T'HH:mm:ss.SSSSSS"]
        target => "start_date"
    }
    mutate {
        remove_field => ["[document][chunker_params]"]
    }
    ruby {
        code => "event.set('[document][stats][deduplicated_size_mb]', event.get('[document][stats][deduplicated_size]').to_i / (1024 * 1024))"
    }
    ruby {
        code => "event.set('[document][stats][compressed_size_mb]', event.get('[document][stats][compressed_size]').to_i / (1024 * 1024))"
    }
    ruby {
        code => "event.set('[document][stats][original_size_mb]', event.get('[document][stats][original_size]').to_i / (1024 * 1024))"
    }
}
output {
    stdout {
        codec => rubydebug
    }
}
