---

apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: oauth2-proxy
  namespace: oauth-proxy
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://oauth2-proxy.github.io/manifests
      chart: oauth2-proxy
      version: 6.2.1
      sourceRef:
        kind: HelmRepository
        name: oauth2-proxy-charts
        namespace: flux-system
      interval: 5m
  values:
    # Oauth client configuration specifics
    config:
      # OAuth client ID
      clientID: "${SECRET_ECHOSERVER_OAUTH_CLIENT_ID}"
      # OAuth client secret
      clientSecret: "${SECRET_ECHOSERVER_OAUTH_CLIENT_SECRET}"
      # Create a new secret with the following command
      # openssl rand -base64 32 | head -c 32 | base64
      # Use an existing secret for OAuth2 credentials (see secret.yaml for required fields)
      # Example:
      # existingSecret: secret
      cookieSecret: "${SECRET_ECHOSERVER_OAUTH_COOKIE_SECRET}"
      # The name of the cookie that oauth2-proxy will create
      # If left empty, it will default to the release name
      cookieName: ""
      configFile: |-
        provider = "oidc"
        redirect_url = "https://echoserver-secure.${SECRET_DOMAIN}/oauth2/callback"
        oidc_issuer_url = "${SECRET_ECHOSERVER_OAUTH_ISSUER_URL}"
        oidc_jwks_url = "${SECRET_ECHOSERVER_OAUTH_ISSUER_URL}.well-known/openid-configuration"
        profile_url = "${SECRET_ECHOSERVER_OAUTH_ISSUER_URL}userinfo"
        upstreams = [
          "http://echoserver-secure.oauth-proxy.svc"
        ]
        pass_access_token = true
        pass_authorization_header = true
        set_authorization_header = true
        skip_provider_button = true
        email_domains = [ "*" ]

    metrics:
      # Enable Prometheus metrics endpoint
      enabled: true
      # Serve Prometheus metrics on this port
      port: 44180
      servicemonitor:
        # Enable Prometheus Operator ServiceMonitor
        enabled: false
        # Define the namespace where to deploy the ServiceMonitor resource
        namespace: ""
        # Prometheus Instance definition
        prometheusInstance: default
        # Prometheus scrape interval
        interval: 60s
        # Prometheus scrape timeout
        scrapeTimeout: 30s
        # Add custom labels to the ServiceMonitor resource
        labels: {}
